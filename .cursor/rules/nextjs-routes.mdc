---
description: Create file that will be used by NextJS to handle the routing and handle error, loading, and more.
globs: *.tsx
---
NextJS App Directory come with totally different way of handling routing.

Every files in `App` will be included but only the follwing files will be used.

## `page.tsx`

The template for page is located in [npag.code-snippets](mdc:.vscode/npag.code-snippets) and define a page. You can also use [npagl.code-snippets](mdc:.vscode/npagl.code-snippets) for having a default layout. Here is how page work :

* `/app/users/page.tsx` will route in `/users`

## `layout.tsx`

The template for the layout is located in [nlay.code-snippets](mdc:.vscode/nlay.code-snippets) and define the layout that will be applied to every child of a route.

* `/app/users/layout.tsx` will take a children and every route will have the layout applied, exemple :

* `/users/1`
* `/users`
* `/users/dashboard/test`

## `error.tsx`

The template can be found in [nerr.code-snippets](mdc:.vscode/nerr.code-snippets) and define the Error page. When a child routes get an error, the `error` will be displayed. It's the nearest error in the tree that will be displayed. It's a good practice to always add an error.

* `/app/users/error.tsx` will show an error for every route that didn't have a nearest error, children of `/users`

## `loading.tsx`

The template can be found in [nloa.code-snippets](mdc:.vscode/nloa.code-snippets) and define the Loading page. 

When a child is a [server-components.mdc](mdc:.cursor/rules/server-components.mdc) and wait, the `loading.tsx` page will be displayed.

* `/app/users/loading.tsx` will show a loader for every route that didn't have a nearest loading, children of `/users`








